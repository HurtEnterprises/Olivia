//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthVaultProxyTest.HVDataAccess {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUpdatedRecordsRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class GetUpdatedRecordsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SinceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SinceDate {
            get {
                return SinceDateField;
            }
            set {
                if ((SinceDateField.Equals(value) != true)) {
                    SinceDateField = value;
                    RaisePropertyChanged("SinceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return TokenField;
            }
            set {
                if ((object.ReferenceEquals(TokenField, value) != true)) {
                    TokenField = value;
                    RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HVProxyResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVDataAccess.GetThingsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVDataAccess.PutThingResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVDataAccess.PutThingsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsResponse))]
    public partial class HVProxyResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return MessageField;
            }
            set {
                if ((object.ReferenceEquals(MessageField, value) != true)) {
                    MessageField = value;
                    RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stack {
            get {
                return StackField;
            }
            set {
                if ((object.ReferenceEquals(StackField, value) != true)) {
                    StackField = value;
                    RaisePropertyChanged("Stack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return SuccessField;
            }
            set {
                if ((SuccessField.Equals(value) != true)) {
                    SuccessField = value;
                    RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetThingsResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class GetThingsResponse : HealthVaultProxyTest.HVDataAccess.HVProxyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ThingsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Things {
            get {
                return ThingsField;
            }
            set {
                if ((object.ReferenceEquals(ThingsField, value) != true)) {
                    ThingsField = value;
                    RaisePropertyChanged("Things");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PutThingResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class PutThingResponse : HealthVaultProxyTest.HVDataAccess.HVProxyResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PutThingsResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class PutThingsResponse : HealthVaultProxyTest.HVDataAccess.HVProxyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountSucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexOnErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountReceived {
            get {
                return CountReceivedField;
            }
            set {
                if ((CountReceivedField.Equals(value) != true)) {
                    CountReceivedField = value;
                    RaisePropertyChanged("CountReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountSucceeded {
            get {
                return CountSucceededField;
            }
            set {
                if ((CountSucceededField.Equals(value) != true)) {
                    CountSucceededField = value;
                    RaisePropertyChanged("CountSucceeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndexOnError {
            get {
                return IndexOnErrorField;
            }
            set {
                if ((IndexOnErrorField.Equals(value) != true)) {
                    IndexOnErrorField = value;
                    RaisePropertyChanged("IndexOnError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUpdatedRecordsResponse", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class GetUpdatedRecordsResponse : HealthVaultProxyTest.HVDataAccess.HVProxyResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HealthVaultProxyTest.HVDataAccess.RecordUpdateInfo[] UpdatedRecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HealthVaultProxyTest.HVDataAccess.RecordUpdateInfo[] UpdatedRecords {
            get {
                return UpdatedRecordsField;
            }
            set {
                if ((object.ReferenceEquals(UpdatedRecordsField, value) != true)) {
                    UpdatedRecordsField = value;
                    RaisePropertyChanged("UpdatedRecords");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordUpdateInfo", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class RecordUpdateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return LastUpdateDateField;
            }
            set {
                if ((LastUpdateDateField.Equals(value) != true)) {
                    LastUpdateDateField = value;
                    RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return PersonIdField;
            }
            set {
                if ((PersonIdField.Equals(value) != true)) {
                    PersonIdField = value;
                    RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return RecordIdField;
            }
            set {
                if ((RecordIdField.Equals(value) != true)) {
                    RecordIdField = value;
                    RaisePropertyChanged("RecordId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetThingsRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class GetThingsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SinceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] TypeIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return PersonIdField;
            }
            set {
                if ((PersonIdField.Equals(value) != true)) {
                    PersonIdField = value;
                    RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return RecordIdField;
            }
            set {
                if ((RecordIdField.Equals(value) != true)) {
                    RecordIdField = value;
                    RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SinceDate {
            get {
                return SinceDateField;
            }
            set {
                if ((SinceDateField.Equals(value) != true)) {
                    SinceDateField = value;
                    RaisePropertyChanged("SinceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return TokenField;
            }
            set {
                if ((object.ReferenceEquals(TokenField, value) != true)) {
                    TokenField = value;
                    RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] TypeIds {
            get {
                return TypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(TypeIdsField, value) != true)) {
                    TypeIdsField = value;
                    RaisePropertyChanged("TypeIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PutThingRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class PutThingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return PersonIdField;
            }
            set {
                if ((PersonIdField.Equals(value) != true)) {
                    PersonIdField = value;
                    RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return RecordIdField;
            }
            set {
                if ((RecordIdField.Equals(value) != true)) {
                    RecordIdField = value;
                    RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return TokenField;
            }
            set {
                if ((object.ReferenceEquals(TokenField, value) != true)) {
                    TokenField = value;
                    RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TypeId {
            get {
                return TypeIdField;
            }
            set {
                if ((TypeIdField.Equals(value) != true)) {
                    TypeIdField = value;
                    RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(TypeNameField, value) != true)) {
                    TypeNameField = value;
                    RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlItem {
            get {
                return XmlItemField;
            }
            set {
                if ((object.ReferenceEquals(XmlItemField, value) != true)) {
                    XmlItemField = value;
                    RaisePropertyChanged("XmlItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PutThingsRequest", Namespace="http://schemas.datacontract.org/2004/07/HealthVaultProxy")]
    [System.SerializableAttribute()]
    public partial class PutThingsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] XmlInputsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return extensionDataField;
            }
            set {
                extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonId {
            get {
                return PersonIdField;
            }
            set {
                if ((PersonIdField.Equals(value) != true)) {
                    PersonIdField = value;
                    RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordId {
            get {
                return RecordIdField;
            }
            set {
                if ((RecordIdField.Equals(value) != true)) {
                    RecordIdField = value;
                    RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return TokenField;
            }
            set {
                if ((object.ReferenceEquals(TokenField, value) != true)) {
                    TokenField = value;
                    RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] XmlInputs {
            get {
                return XmlInputsField;
            }
            set {
                if ((object.ReferenceEquals(XmlInputsField, value) != true)) {
                    XmlInputsField = value;
                    RaisePropertyChanged("XmlInputs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HVDataAccess.IHVDataAccess")]
    public interface IHVDataAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/GetUpdatedRecords", ReplyAction="http://tempuri.org/IHVDataAccess/GetUpdatedRecordsResponse")]
        HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsResponse GetUpdatedRecords(HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/GetUpdatedRecords", ReplyAction="http://tempuri.org/IHVDataAccess/GetUpdatedRecordsResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsResponse> GetUpdatedRecordsAsync(HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/GetThings", ReplyAction="http://tempuri.org/IHVDataAccess/GetThingsResponse")]
        HealthVaultProxyTest.HVDataAccess.GetThingsResponse GetThings(HealthVaultProxyTest.HVDataAccess.GetThingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/GetThings", ReplyAction="http://tempuri.org/IHVDataAccess/GetThingsResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.GetThingsResponse> GetThingsAsync(HealthVaultProxyTest.HVDataAccess.GetThingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/PutThing", ReplyAction="http://tempuri.org/IHVDataAccess/PutThingResponse")]
        HealthVaultProxyTest.HVDataAccess.PutThingResponse PutThing(HealthVaultProxyTest.HVDataAccess.PutThingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/PutThing", ReplyAction="http://tempuri.org/IHVDataAccess/PutThingResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.PutThingResponse> PutThingAsync(HealthVaultProxyTest.HVDataAccess.PutThingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/PutThings", ReplyAction="http://tempuri.org/IHVDataAccess/PutThingsResponse")]
        HealthVaultProxyTest.HVDataAccess.PutThingsResponse PutThings(HealthVaultProxyTest.HVDataAccess.PutThingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHVDataAccess/PutThings", ReplyAction="http://tempuri.org/IHVDataAccess/PutThingsResponse")]
        System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.PutThingsResponse> PutThingsAsync(HealthVaultProxyTest.HVDataAccess.PutThingsRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHVDataAccessChannel : HealthVaultProxyTest.HVDataAccess.IHVDataAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HVDataAccessClient : System.ServiceModel.ClientBase<HealthVaultProxyTest.HVDataAccess.IHVDataAccess>, HealthVaultProxyTest.HVDataAccess.IHVDataAccess {
        
        public HVDataAccessClient() {
        }
        
        public HVDataAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HVDataAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HVDataAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HVDataAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsResponse GetUpdatedRecords(HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsRequest request) {
            return base.Channel.GetUpdatedRecords(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsResponse> GetUpdatedRecordsAsync(HealthVaultProxyTest.HVDataAccess.GetUpdatedRecordsRequest request) {
            return base.Channel.GetUpdatedRecordsAsync(request);
        }
        
        public HealthVaultProxyTest.HVDataAccess.GetThingsResponse GetThings(HealthVaultProxyTest.HVDataAccess.GetThingsRequest request) {
            return base.Channel.GetThings(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.GetThingsResponse> GetThingsAsync(HealthVaultProxyTest.HVDataAccess.GetThingsRequest request) {
            return base.Channel.GetThingsAsync(request);
        }
        
        public HealthVaultProxyTest.HVDataAccess.PutThingResponse PutThing(HealthVaultProxyTest.HVDataAccess.PutThingRequest request) {
            return base.Channel.PutThing(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.PutThingResponse> PutThingAsync(HealthVaultProxyTest.HVDataAccess.PutThingRequest request) {
            return base.Channel.PutThingAsync(request);
        }
        
        public HealthVaultProxyTest.HVDataAccess.PutThingsResponse PutThings(HealthVaultProxyTest.HVDataAccess.PutThingsRequest request) {
            return base.Channel.PutThings(request);
        }
        
        public System.Threading.Tasks.Task<HealthVaultProxyTest.HVDataAccess.PutThingsResponse> PutThingsAsync(HealthVaultProxyTest.HVDataAccess.PutThingsRequest request) {
            return base.Channel.PutThingsAsync(request);
        }
    }
}
